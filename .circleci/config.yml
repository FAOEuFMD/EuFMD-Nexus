version: 2.1

orbs:
  node: circleci/node@5.1.0
  python: circleci/python@2.1.1

jobs:
  build-and-test:
    docker:
      - image: cimg/node:18.20.2
    steps:
      - checkout
      - run:
          name: Install all dependencies
          command: |
            echo "Installing frontend dependencies..."
            cd frontend
            npm install
            # Create a simplified tailwind.config.js for build
            echo "Creating a simplified tailwind.config.js for build..."
            cat > tailwind.config.js << 'EOL'
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./src/**/*.{js,jsx,ts,tsx}",
  ],
  theme: {
    extend: {
      // Basic theme extensions only
      colors: {
        primary: {
          50: '#eff6ff',
          100: '#dbeafe',
          200: '#bfdbfe',
          300: '#93c5fd',
          400: '#60a5fa',
          500: '#3b82f6',
          600: '#2563eb',
          700: '#1d4ed8',
          800: '#1e40af',
          900: '#1e3a8a',
        },
        green: {
          greenMain: "#15736d",
          dark: "#015039",
          light: "#CADFBF",
        },
      },
    },
  },
  // No plugins for CI build
  plugins: [],
}
EOL
            echo "Modified tailwind.config.js:"
            cat tailwind.config.js
      - run:
          name: Build React Frontend
          command: cd frontend && npm run build
      - persist_to_workspace:
          root: ./
          paths:
            - frontend/build
            - backend
            - deployment

  deploy-to-aws:
    docker:
      - image: cimg/python:3.10-node
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - add_ssh_keys:
          fingerprints:
            - "SHA256:aGhV26g9FrJTqEplXTmqyD9hLeuoCYAdqZNUwjxx9uA"
      - run:
          name: Install deployment dependencies
          command: pip install paramiko
      - run:
          name: Deploy to AWS EC2
          command: |
            echo "Starting deployment to AWS EC2..."
            
            # Create directory structure on EC2
            ssh -o StrictHostKeyChecking=no ubuntu@13.49.235.70 "sudo mkdir -p /var/www/eufmd-nexus/frontend /var/www/eufmd-nexus/backend"
            
            # Transfer frontend files
            echo "Transferring frontend files..."
            scp -r -o StrictHostKeyChecking=no ./frontend/build/* ubuntu@13.49.235.70:/var/www/eufmd-nexus/frontend/
            
            # Transfer backend files
            echo "Transferring backend files..."
            scp -r -o StrictHostKeyChecking=no ./backend/* ubuntu@13.49.235.70:/var/www/eufmd-nexus/backend/
            
            # Copy service and Nginx config files
            echo "Setting up service files..."
            scp -o StrictHostKeyChecking=no ./deployment/eufmd-nexus-api.service ubuntu@13.49.235.70:/tmp/
            scp -o StrictHostKeyChecking=no ./deployment/nginx-eufmd-nexus.conf ubuntu@13.49.235.70:/tmp/
            
            # Install service and Nginx config
            ssh -o StrictHostKeyChecking=no ubuntu@13.49.235.70 "sudo mv /tmp/eufmd-nexus-api.service /etc/systemd/system/ && sudo systemctl daemon-reload && sudo systemctl enable eufmd-nexus-api"
            ssh -o StrictHostKeyChecking=no ubuntu@13.49.235.70 "sudo mv /tmp/nginx-eufmd-nexus.conf /etc/nginx/sites-available/eufmd-nexus && sudo ln -sf /etc/nginx/sites-available/eufmd-nexus /etc/nginx/sites-enabled/"
            
            # Set up Python environment and install dependencies
            echo "Setting up Python environment..."
            ssh -o StrictHostKeyChecking=no ubuntu@13.49.235.70 "cd /var/www/eufmd-nexus/backend && python3 -m venv venv && source venv/bin/activate && pip install --upgrade pip && pip install -r requirements.txt"
            
            # Copy environment variables
            echo "Setting up environment variables..."
            scp -o StrictHostKeyChecking=no ./.env ubuntu@13.49.235.70:/var/www/eufmd-nexus/backend/.env
            
            # Update permissions
            ssh -o StrictHostKeyChecking=no ubuntu@13.49.235.70 "sudo chown -R ubuntu:ubuntu /var/www/eufmd-nexus"
            
            # Restart services
            echo "Restarting services..."
            ssh -o StrictHostKeyChecking=no ubuntu@13.49.235.70 "sudo systemctl restart eufmd-nexus-api && sudo systemctl restart nginx"
            
            echo "Deployment completed successfully!"

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-and-test:
          filters:
            branches:
              only: main
      - deploy-to-aws:
          requires:
            - build-and-test
          filters:
            branches:
              only: main